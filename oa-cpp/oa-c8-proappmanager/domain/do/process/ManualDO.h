#pragma once
#ifndef _MANUAL_DO_
#define _MANUAL_DO_
#include "../DoInclude.h"

class ManualDO {
	CC_SYNTHESIZE(string, xid, Xid);
	CC_SYNTHESIZE(string, xcreateTime, XcreateTime);
	CC_SYNTHESIZE(string, xsequence, Xsequence);
	CC_SYNTHESIZE(string, xupdateTime, XupdateTime);
	CC_SYNTHESIZE(int, xdistributeFactor, XdistributeFactor);
	CC_SYNTHESIZE(string, xafterArriveScript, XafterArriveScript);
	CC_SYNTHESIZE(string, xafterArriveScriptText, XafterArriveScriptText);
	CC_SYNTHESIZE(string, xafterExecuteScript, XafterExecuteScript);
	CC_SYNTHESIZE(string, xafterExecuteScriptText, XafterExecuteScriptText);
	CC_SYNTHESIZE(string, xafterInquireScript, XafterInquireScript);
	CC_SYNTHESIZE(string, xafterInquireScriptText, XafterInquireScriptText);
	CC_SYNTHESIZE(string, xalias, Xalias);
	CC_SYNTHESIZE(bool, xallowAddSplit, XallowAddSplit);
	CC_SYNTHESIZE(bool, xallowDeleteWork, XallowDeleteWork);
	CC_SYNTHESIZE(bool, xallowPause, XallowPause);
	CC_SYNTHESIZE(bool, xallowPress, XallowPress);
	CC_SYNTHESIZE(bool, xallowRapid, XallowRapid);
	CC_SYNTHESIZE(bool, xallowReroute, XallowReroute);
	CC_SYNTHESIZE(bool, xallowRerouteTo, XallowRerouteTo);
	CC_SYNTHESIZE(bool, xallowReset, XallowReset);
	CC_SYNTHESIZE(bool, xallowRetract, XallowRetract);
	CC_SYNTHESIZE(bool, xallowRollback, XallowRollback);
	CC_SYNTHESIZE(string, xbeforeArriveScript, XbeforeArriveScript);
	CC_SYNTHESIZE(string, xbeforeArriveScriptText, XbeforeArriveScriptText);
	CC_SYNTHESIZE(string, xbeforeExecuteScript, XbeforeExecuteScript);
	CC_SYNTHESIZE(string, xbeforeExecuteScriptText, XbeforeExecuteScriptText);
	CC_SYNTHESIZE(string, xbeforeInquireScript, XbeforeInquireScript);
	CC_SYNTHESIZE(string, xbeforeInquireScriptText, XbeforeInquireScriptText);
	CC_SYNTHESIZE(string, xdescription, Xdescription);
	CC_SYNTHESIZE(string, xdisplayLogScript, XdisplayLogScript);
	CC_SYNTHESIZE(string, xdisplayLogScriptText, XdisplayLogScriptText);
	CC_SYNTHESIZE(string, xedition, Xedition);
	CC_SYNTHESIZE(string, xextension, Xextension);
	CC_SYNTHESIZE(string, xform, Xform);
	CC_SYNTHESIZE(string, xgroup, Xgroup);
	CC_SYNTHESIZE(string, xmanualAfterTaskScript, XmanualAfterTaskScript);
	CC_SYNTHESIZE(string, xmanualAfterTaskScriptText, XmanualAfterTaskScriptText);
	CC_SYNTHESIZE(string, xmanualBeforeTaskScript, XmanualBeforeTaskScript);
	CC_SYNTHESIZE(string, xmanualBeforeTaskScriptText, XmanualBeforeTaskScriptText);
	CC_SYNTHESIZE(bool, xmanualMergeSameJobActivity, XmanualMergeSameJobActivity);
	CC_SYNTHESIZE(string, xmanualMode, XmanualMode);
	CC_SYNTHESIZE(string, xmanualStayScript, XmanualStayScript);
	CC_SYNTHESIZE(string, xmanualStayScriptText, XmanualStayScriptText);
	CC_SYNTHESIZE(bool, xmanualUncompletedTaskToRead, XmanualUncompletedTaskToRead);
	CC_SYNTHESIZE(string, xname, Xname);
	CC_SYNTHESIZE(string, xopinionGroup, XopinionGroup);
	CC_SYNTHESIZE(string, xposition, Xposition);
	CC_SYNTHESIZE(string, xprocess, Xprocess);
	CC_SYNTHESIZE(string, xproperties, Xproperties);
	CC_SYNTHESIZE(string, xreadDuty, XreadDuty);
	CC_SYNTHESIZE(string, xreadScript, XreadScript);
	CC_SYNTHESIZE(string, xreadScriptText, XreadScriptText);
	CC_SYNTHESIZE(int, xresetCount, XresetCount);
	CC_SYNTHESIZE(string, xresetRange, XresetRange);
	CC_SYNTHESIZE(string, xresetRangeScriptText, XresetRangeScriptText);
	CC_SYNTHESIZE(string, xreviewDuty, XreviewDuty);
	CC_SYNTHESIZE(string, xreviewScript, XreviewScript);
	CC_SYNTHESIZE(string, xreviewScriptText, XreviewScriptText);
	CC_SYNTHESIZE(string, xtaskDuty, XtaskDuty);
	CC_SYNTHESIZE(int, xtaskExpireDay, XtaskExpireDay);
	CC_SYNTHESIZE(int, xtaskExpireHour, XtaskExpireHour);
	CC_SYNTHESIZE(string, xtaskExpireScript, XtaskExpireScript);
	CC_SYNTHESIZE(string, xtaskExpireScriptText, XtaskExpireScriptText);
	CC_SYNTHESIZE(string, xtaskExpireType, XtaskExpireType);
	CC_SYNTHESIZE(bool, xtaskExpireWorkTime, XtaskExpireWorkTime);
	CC_SYNTHESIZE(string, xtaskScript, XtaskScript);
	CC_SYNTHESIZE(string, xtaskScriptText, XtaskScriptText);
public:
	ManualDO() {
		this->xid = "";
		this->xcreateTime = "";
		this->xsequence = "";
		this->xupdateTime = "";
		this->xdistributeFactor = 0;
		this->xafterArriveScript = "";
		this->xafterArriveScriptText = "";
		this->xafterExecuteScript = "";
		this->xafterExecuteScriptText = "";
		this->xafterInquireScript = "";
		this->xafterInquireScriptText = "";
		this->xalias = "";
		this->xallowAddSplit = false;
		this->xallowDeleteWork = false;
		this->xallowPause = false;
		this->xallowPress = false;
		this->xallowRapid = false;
		this->xallowReroute = false;
		this->xallowRerouteTo = false;
		this->xallowReset = false;
		this->xallowRetract = false;
		this->xallowRollback = false;
		this->xbeforeArriveScript = "";
		this->xbeforeArriveScriptText = "";
		this->xbeforeExecuteScript = "";
		this->xbeforeExecuteScriptText = "";
		this->xbeforeInquireScript = "";
		this->xbeforeInquireScriptText = "";
		this->xdescription = "";
		this->xdisplayLogScript = "";
		this->xdisplayLogScriptText = "";
		this->xedition = "";
		this->xextension = "";
		this->xform = "";
		this->xgroup = "";
		this->xmanualAfterTaskScript = "";
		this->xmanualAfterTaskScriptText = "";
		this->xmanualBeforeTaskScript = "";
		this->xmanualBeforeTaskScriptText = "";
		this->xmanualMergeSameJobActivity = false;
		this->xmanualMode = "";
		this->xmanualStayScript = "";
		this->xmanualStayScriptText = "";
		this->xmanualUncompletedTaskToRead = false;
		this->xname = "";
		this->xopinionGroup = "";
		this->xposition = "";
		this->xprocess = "";
		this->xproperties = "";
		this->xreadDuty = "";
		this->xreadScript = "";
		this->xreadScriptText = "";
		this->xresetCount = 0;
		this->xresetRange = "";
		this->xresetRangeScriptText = "";
		this->xreviewDuty = "";
		this->xreviewScript = "";
		this->xreviewScriptText = "";
		this->xtaskDuty = "";
		this->xtaskExpireDay = 0;
		this->xtaskExpireHour = 0;
		this->xtaskExpireScript = "";
		this->xtaskExpireScriptText = "";
		this->xtaskExpireType = "";
		this->xtaskExpireWorkTime = false;
		this->xtaskScript = "";
		this->xtaskScriptText = "";
		}
};

#endif // !_MANUAL_DO_